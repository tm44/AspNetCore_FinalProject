@using PeopleNotes.Classes

@model IEnumerable<PeopleNotes.Classes.Note>
@{
    var personId = ((Person)ViewData["Person"]).PersonId;

    <a asp-action="AddOrEdit" asp-controller="Notes" asp-route-personId="@personId" class="btn btn-success text-white"><i class="fas fa-random"></i> New Note</a>

    if (@Model.Count() == 0)
    {
        <div>No notes yet.  <a asp-action="AddOrEdit" asp-controller="Notes" asp-route-personId="@personId">Add a note?</a></div>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="note">@Html.DisplayNameFor(m => m.Text)</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="date">Last Updated</a>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var n in Model)
                {
                    <tr>
                        <td>@n.Text</td>
                        <td>@n.LastUpdated.ToString("M/d/yy h:mm:ss tt")</td>
                        <td>
                            <a asp-action="AddOrEdit" asp-controller="Notes" asp-route-id="@n.NoteId" class="btn btn-success text-white"><i class="fas fa-edit"></i> Edit </a>
                        </td>
                        <td>
                            <a asp-action="Delete" asp-controller="Notes" asp-route-id="@n.NoteId" class="btn btn-danger text-white"><i class="fas fa-xmark"></i> Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
